generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_POST_URL")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Example {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String           @id @default(cuid())
  name            String
  surname         String           @default("")
  email           String           @unique
  username        String           @unique
  password        String
  isAdmin         Boolean          @default(false)
  Account         Account[]
  Session         Session[]
  UserInformation UserInformation?
  Favorites       Favorites[]
}

model UserInformation {
  id        String   @id @default(cuid())
  cin       String
  naissance DateTime
  address   String
  tel       String   @unique
  userId    String   @unique
  User      User     @relation(fields: [userId], references: [id])
}

model Favorites {
  id              String          @id @default(cuid())
  userId          String
  productId       String
  User            User            @relation(fields: [userId], references: [id])
  ImportedProduct ImportedProduct @relation(fields: [productId], references: [id])
  created         DateTime        @default(now())
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Tube {
  id       String            @id @default(cuid())
  name     String
  products ImportedProduct[]
}

model Mark {
  id       String            @id @default(cuid())
  name     String
  products ImportedProduct[]
}

model ImportedProduct {
  id          String      @id @default(cuid())
  productId   String
  price       Float
  isEnabled   Boolean     @default(false)
  name        String
  description String      @default("")
  minShipping Int         @default(0)
  maxShipping Int         @default(0)
  imported    DateTime    @default(now())
  Favorites   Favorites[]
  tubeId      String?
  markId      String?
  tube        Tube?       @relation(fields: [tubeId], references: [id])
  mark        Mark?       @relation(fields: [markId], references: [id])
}

model TestTest {
  id String @id @default(cuid())
}
